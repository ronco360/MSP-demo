- name: Telemetry Streaming (TS) playbook
  hosts: tag_Role_bigip
  connection: local
  vars_files: "{{ setupfile }}"

  tasks:
    - name: Set connection provider for BIG-IP tasks
      set_fact:
        provider:
          server: "{{ public_dns_name }}"
          server_port: 8443
          user: "{{ bigip.admin_user }}"
          password: "{{ bigip.admin_password }}"
          validate_certs: false


    #############################
    # Perform TS Deployment ELK #
    #############################
    - name:  Get the private and public ip of the host running elk (elasticsearch, logstash, kibana)
      set_fact:
        elk_private_ip: "{{ groups[group_name] | map('extract', hostvars, 'private_ip_address') | list | first }}"
        elk_public_ip: "{{ groups[group_name] | map('extract', hostvars, 'public_ip_address') | list | first }}"
        elk_public_dns: "{{ groups[group_name] | map('extract', hostvars, 'public_dns_name') | list | first }}"
      vars:
        group_name: "tag_Role_elk"

    ### ElasticSearch Index and Mappings Creation
    - name: Create the ElasticSearch index and mappings
      uri:
        url: "http://{{ elk_public_ip }}:9200/bigip"
        method: PUT
        body: "{{ lookup('file','templates/elk/es_index.json') }}"
        status_code: 200
        body_format: json
      failed_when: false
      tags: elk

    ### Kibana Index and Mappings Creation
    - name: Create the Kibana index and mappings
      uri:
        url: "http://{{ elk_public_ip }}:5601/api/kibana/dashboards/import"
        method: POST
        body: "{{ lookup('file','templates/elk/kibana_index.json') }}"
        status_code: 200
        body_format: json
        headers:
          kbn-xsrf: true
      failed_when: false
      tags: elk

    - name: Process jinja template and store result for artifact storage (elk json blob for TS)
      template:
        src: templates/ts/elk.json.j2
        dest: "{{ outputfolder }}/ts_elk.json"
        mode: 0644
      tags: elk
  
    - name: Perform TS registration
      include_role:
        name: f5devcentral.atc_deploy
      vars:
        atc_method: POST
        atc_declaration_file: "{{ outputfolder }}/ts_elk.json"
        atc_delay: 10
        atc_retries: 5
      tags: elk

    - name: Store result of TS registration for artifact storage (elk json blob for TS)
      copy:
        content: |
          {{ (atc_TS_status.json is defined) | ternary(atc_TS_status.json | to_nice_json(indent=2), atc_TS_status.content) }}
        dest: "{{ outputfolder }}/ts_elk_result.json"
      tags: elk

    - name: Print the URL for ELK (Elasticsearch, Logstash and Kibana)
      debug:
        msg: >
          Verify if metrics and/or events are arriving at the following admin UI's
            > Elasticsearch UI  : http://{{ elk_public_dns }}:9200
            > ES Cluster Health : http://{{ elk_public_dns }}:9200/_cluster/health
            > ES Indices        : http://{{ elk_public_dns }}:9200/_cat/indices?v
            > Kibana UI         : http://{{ elk_public_dns }}:5601

  ####################################
  # Manual verification on BIG-IP(s) #
  ####################################
  post_tasks:
    - name: Final result verification on BIG-IP 
      debug:
        msg: >
          Verify on BIG-IP if your desired result was achieved
            > Admin UI   : https://{{ public_dns_name }}:8443
            > REST URI   : https://{{ public_dns_name }}:8443/mgmt/shared/telemetry/declare
            > DOCS URL   : https://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/latest
            > SCHEMA REF : https://clouddocs.f5.com/products/extensions/f5-telemetry-streaming/latest/schema-reference.html
            > GITHUB SRC : https://github.com/F5Networks/f5-telemetry-streaming
